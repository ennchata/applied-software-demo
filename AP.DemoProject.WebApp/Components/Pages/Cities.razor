@page "/cities"
@using MediatR
@using AP.DemoProject.Application.CQRS.Cities
@using AP.DemoProject.Application.CQRS.Countries
@inject IMediator _mediator

<PageTitle>Cities</PageTitle>

<h1>Demo Project</h1>
<h2>List of cities</h2>

<table>
	<tr>
		<td>City Name</td>
		<td>Population Name</td>
		<td>Country Name</td>
	</tr>
	@foreach (CityDTO dto in CityDTOs) {
		<tr>
			<td>@dto.Name</td>
			<td>@dto.Population</td>
			@if (CountryNames.TryGetValue(dto.CountryId, out string countryName)) {
				<td>@countryName</td>
			} else {
				<td>Unknown</td>
			}
		</tr>
	}
</table>

@code {
	[Parameter]
	[SupplyParameterFromQuery(Name = "page")]
	public int? Page { get; set; }
	public IEnumerable<CityDTO> CityDTOs = [];
	public Dictionary<int, string> CountryNames = [];

	protected override async Task OnInitializedAsync() {
		CityDTOs = await _mediator.Send(new GetAllCitiesQuery() { PageNumber = Page ?? 1, PageSize = 20 });
		IEnumerable<CountryDTO> countryDTOs = await _mediator.Send(new GetAllCountriesQuery());

		foreach (CountryDTO countryDTO in countryDTOs) {
			CountryNames.Add(countryDTO.Id, countryDTO.Name);
		}
	}
}
